#!/bin/bash

if [[ "$1" == "switch" ]]; then
    sink=(`pactl list short sinks |
             awk '/SUSPENDED|IDLE/ {print $2}'`)
    pactl set-default-sink $sink

    ins=(`pactl list short sink-inputs | cut -f 1`)
    for ind in ${ins[@]}; do
        pacmd move-sink-input $ind $sink
    done

    sink=`echo $sink | cut -d '.' -f 4`
    notify-send -i "$HOME/.config/awesome/icons/switch.svg" 'Volume Text' "$sink"

elif [[ "$1" == "toggle" ]]; then
    pulsemixer --toggle-mute
    mute=(`pulsemixer --get-mute`)

    if [[ "$mute" == '1' ]]; then
        notify-send -i "$HOME/.config/awesome/icons/volume-mute.svg" 'Volume Text' "Muted"
    else
        notify-send -i "$HOME/.config/awesome/icons/volume.svg" 'Volume Text' "Unmuted"
    fi

else
    # Returns two arguments. This way it's implicit
    # we're only using the first
    cmd="$1"
    vol=(`pulsemixer --get-volume`)
    eval "let vol=$vol$cmd"
    pulsemixer --set-volume $vol

    icon='volume-up'
    [[ ${cmd:0:1} == '-' ]] && icon='volume-down'

    vol=(`pulsemixer --get-volume`)
    notify-send -i "$HOME/.config/awesome/icons/$icon.svg" 'Volume Text' "Vol:  $vol%"
fi

