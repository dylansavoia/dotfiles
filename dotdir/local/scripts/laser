#!/bin/bash

### Info ######################################
#   .pcache (prettified cache) is a list of prettified_names
#   When shown, an index is prepended to each item So that you obtain:
#   | N | icon | prettified_name | 
#
#   N is then used to access .cache at the Nth record:
#   | category | full_name |
#   
#   This record is the format used in the "Run" Section.
#   Category can be:
#   - 0: Other (including not in cache)
#   - 1: File
#   - t: Terminal
#
#   Every command followed by a ';' is executed opening a terminal
#   es. 'htop;'
#
#   Shortcuts are defined in their own file with the following structure:
#   icon : alias : command


### Create ####################################
config="$HOME/.config/laser/"
cache="/tmp/.laser_cache"
pcache="/tmp/.laser_pcache"

rc=`cat "$config/laserrc"`

[[ -e $config ]] || mkdir $config

# Get section <name> from rc variable (the config file)
function from_rc() {
    local res=`echo "$rc" | awk -v name="$1" '
        BEGIN {p=0}
        /^$/ {p=0}
        {if (p==1) print $0}
        $0 ~ name {p=1}'`

    echo "$res"
}

function generate () {
    # Shortcuts
    shrt=$(from_rc Shortcuts)

    shrt_c=`echo "$shrt" | cut -d ':' -f 3- | awk 'BEGIN{OFS="\t"}{print "0", $0}'`
    shrt_p=`echo "$shrt" | awk -F ':' '{print $1 "\t" $2}'`

    # Binaries
    bins=`awk -F '=' '
         BEGIN {OFS="\t"}
         term == 0  && $1 == "Terminal" && $2 == "true" {term="t"}
         name == "" && $1 == "Name"  {name=$2}
         exec == "" && $1 == "Exec"  {sub(/^[^=]+=/, "", $0);sub(/%.$/, "", $0);exec=$0}
         FNR == 1 {if(name!="")print term, name, exec; term=0;name="";exec=""}
         END {print term, name, exec}
    ' /usr/share/applications/*.desktop`
    bins_c=`echo "$bins" | cut -d $'\t' -f 1,3`
    bins_p=`echo "$bins" | awk -F "\t" '{print "\t"$2}'`

    # Browser History
    SQLCMD="SELECT DISTINCT url, REPLACE(title, '|', '-') FROM History WHERE title <> '' AND url NOT LIKE '%search?q=%' ORDER BY atime DESC LIMIT 1000"
    bhist=$(sqlite3 ~/.local/share/qutebrowser/history.sqlite "$SQLCMD")

    bhist_c=`echo "$bhist" | awk -F '|' 'BEGIN{OFS="\t"}{print "0", $1}'`
    bhist_p=`echo "$bhist" | awk -F '|' '{print "\t"$2}'`

    # Files and Dirs
    finds=$(from_rc Find)
    files=()

    IFS=$'\n'
    for f in $finds; do
        cmd="find $f -name '\.git' -prune -o -printf '%y\t%d\t%h/%f\n'"
        fls=`eval $cmd`
        files=( ${files[*]} ${fls[*]})
    done

    files=`echo "${files[*]}" |
        awk -v home="$HOME" -F '\t' '
            $1 == "d" {print $2 "\t\t" $3}
            $1 != "d" {print $2 "\t\t" $3}' |
        sort -n -k 1`

    fdirs_c=`echo "$files" | awk -F '\t' 'BEGIN{OFS="\t"}{print "1", $3}'`
    fdirs_p=`echo "$files" | awk -v home="$HOME" -F '\t' '
        BEGIN{OFS="\t"}
        {sub(home, "~", $3);print $2, $3}'`

    echo -e "$shrt_c\n$bins_c\n$bhist_c\n$fdirs_c" > "$cache"
    echo -e "$shrt_p\n$bins_p\n$bhist_p\n$fdirs_p" > "$pcache"

}

( [[ ! -e $cache ]] || [[ $1 == "-r" ]] ) && generate
[[ $1 == "-r" ]] && exit

### Show #######################################
# ...in prettified form (dynamically adding windows)
wins=`wmctrl -l | cut -d ' ' -f5- | awk '{print "\t"$0}'`
nwins=`echo -e "$wins" | wc -l`
input=`cat <(echo "$wins") '/tmp/.laser_pcache'`
sel=`echo -e "$input" | rofi -dmenu -format 'd s' -i -p "Run"`

## If in list select original line from file,
## otherwise print directly.
n=`echo $sel | awk '{print $1}'` 

# If is a window focus it
if [[ $n -ne 0 ]]; then
    if [[ $n -le $nwins ]]; then
        win=`echo "$sel" | cut -d $'\t' -f2`
        wmctrl -a "$win"
        exit
    else
        let n=n-nwins
        sel=`sed -ne "$n p" $cache`
    fi
fi


### Run #########################################
split=( $sel )
category=${split[0]}
name="${split[*]:1: ${#split[*]}}"

echo "Cat: $category"
echo "Name: $name"

# Check if shell
if [[ ${name: -1} == ";" ]]; then
    name=${name:0: -1}
    category='t'
elif [[ ${name: -1} == "?" ]]; then
    name=${name:0: -1}
    category='q'
fi

[[ ${#name} -gt 2 ]] && source launcher "$category" "$name"

